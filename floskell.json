{
    "language": "Haskell2010",
    "extensions": [
        "Arrows",
        "BangPatterns",
        "BinaryLiterals",
        "BlockArguments",
        "CApiFFI",
        "CPP",
        "ConstrainedClassMethods",
        "ConstraintKinds",
        "DataKinds",
        "DatatypeContexts",
        "DefaultSignatures",
        "DeriveAnyClass",
        "DeriveDataTypeable",
        "DeriveFoldable",
        "DeriveFunctor",
        "DeriveGeneric",
        "DeriveTraversable",
        "DerivingStrategies",
        "DerivingVia",
        "DisambiguateRecordFields",
        "DoAndIfThenElse",
        "DoRec",
        "EmptyCase",
        "EmptyDataDecls",
        "ExistentialQuantification",
        "ExplicitForAll",
        "ExplicitNamespaces",
        "ExtendedDefaultRules",
        "ExtensibleRecords",
        "FlexibleContexts",
        "FlexibleInstances",
        "ForeignFunctionInterface",
        "FunctionalDependencies",
        "GADTs",
        "GHCForeignImportPrim",
        "GeneralizedNewtypeDeriving",
        "Generics",
        "HereDocuments",
        "ImplicitParams",
        "ImplicitPrelude",
        "ImpredicativeTypes",
        "IncoherentInstances",
        "InstanceSigs",
        "InterruptibleFFI",
        "JavaScriptFFI",
        "KindSignatures",
        "LambdaCase",
        "LiberalTypeSynonyms",
        "MagicHash",
        "MonoLocalBinds",
        "MonoPatBinds",
        "MonomorphismRestriction",
        "MultiParamTypeClasses",
        "MultiWayIf",
        "NPlusKPatterns",
        "NamedFieldPuns",
        "NamedWildCards",
        "NewQualifiedOperators",
        "NondecreasingIndentation",
        "OverlappingInstances",
        "OverloadedLabels",
        "OverloadedStrings",
        "PackageImports",
        "ParallelArrays",
        "ParallelListComp",
        "PartialTypeSignatures",
        "PatternGuards",
        "PatternSignatures",
        "PatternSynonyms",
        "PolyKinds",
        "PolymorphicComponents",
        "PostfixOperators",
        "QuantifiedConstraints",
        "QuasiQuotes",
        "Rank2Types",
        "RankNTypes",
        "RebindableSyntax",
        "RecordPuns",
        "RecordWildCards",
        "RecursiveDo",
        "RegularPatterns",
        "RelaxedPolyRec",
        "RestrictedTypeSynonyms",
        "RoleAnnotations",
        "Safe",
        "SafeImports",
        "ScopedTypeVariables",
        "StandaloneDeriving",
        "Strict",
        "StrictData",
        "TemplateHaskell",
        "TransformListComp",
        "Trustworthy",
        "TupleSections",
        "TypeApplications",
        "TypeFamilies",
        "TypeFamilyDependencies",
        "TypeInType",
        "TypeOperators",
        "TypeSynonymInstances",
        "UnboxedSums",
        "UnboxedTuples",
        "UndecidableInstances",
        "UnicodeSyntax",
        "UnliftedFFITypes",
        "ViewPatterns",
        "XmlSyntax"
    ],
    "style": "johan-tibell",
    "formatting": {
        "align": {
            "case": false,
            "class": false,
            "import-module": false,
            "import-spec": false,
            "let-binds": false,
            "record-fields": false,
            "where": false,
            "limits": [
                10,
                25
            ]
        },
        "penalty": {
            "indent": 1,
            "linebreak": 10,
            "max-line-length": 80,
            "overfull": 10,
            "overfull-once": 200
        },
        "layout": {
            "app": "try-oneline",
            "con-decls": "try-oneline",
            "declaration": "flex",
            "export-spec-list": "try-oneline",
            "if": "try-oneline",
            "import-spec-list": "flex",
            "infix-app": "flex",
            "let": "try-oneline",
            "list-comp": "try-oneline",
            "record": "try-oneline",
            "type": "try-oneline"
        },
        "indent": {
            "case": "align-or-indent-by 4",
            "class": "align-or-indent-by 4",
            "deriving": 4,
            "do": "align-or-indent-by 4",
            "export-spec-list": "align-or-indent-by 4",
            "if": "align-or-indent-by 4",
            "import-spec-list": "align-or-indent-by 4",
            "let": "align-or-indent-by 4",
            "let-binds": "align-or-indent-by 4",
            "let-in": "align-or-indent-by 4",
            "multi-if": "align-or-indent-by 4",
            "onside": 4,
            "typesig":  "align-or-indent-by 4",
            "where": 2,
            "where-binds": "align-or-indent-by 2"
        },
        "options": {
            "align-sum-type-decl": false,
            "flexible-oneline": true,
            "preserve-vertical-space": true,
            "sort-import-lists": true,
            "sort-imports": true,
            "sort-pragmas": true,
            "split-language-pragmas": true
        }        
    }
}
